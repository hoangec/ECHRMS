@model IEnumerable<HNGHRMS.Web.ViewModels.TransferEmployeeGridViewModel>

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "EmployeesTransferGridView";
        settings.CallbackRouteValues = new { Controller = "Employee", Action = "EmployeesTransferGridViewPartial" };
        settings.ClientSideEvents.EndCallback = "OnEmployeeTransferGridViewEndCallBack";

        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Employee", Action = "EmployeesTransferGridViewPartialDelete" };

        settings.CommandColumn.Visible = false;
        settings.SettingsSearchPanel.Visible = true;        

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.Columns.Add(col =>
        {
            col.FieldName = "ExperienceId";
            col.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(col=>{
            col.FieldName = "EmployeeName";
            col.Width = 200;
            col.SetDataItemTemplateContent(item =>
            {
                Html.DevExpress().HyperLink(link =>
                {
                    string args = DataBinder.Eval(item.DataItem, "EmployeeId").ToString();
                    string name = DataBinder.Eval(item.DataItem, "EmployeeName").ToString();
                    link.NavigateUrl = Url.Action("Index", "Employee", new { id = args });
                    link.Properties.Text = name;
                }).Render();
            });
        });
      
        settings.Columns.Add(col =>
        {
            col.FieldName = "OldCompanyId";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            ComboBoxProperties comboBoxPro = col.PropertiesEdit as ComboBoxProperties;
            comboBoxPro.DataSource = ViewData["companies"];
            comboBoxPro.TextField = "CompanyName";
            comboBoxPro.ValueField = "Id";
            comboBoxPro.ValueType = typeof(int);
        });
        settings.Columns.Add(col => { 
            col.FieldName =  "OldPositionName";
        });
        settings.Columns.Add(col=>{
            col.FieldName = "OldDepartement";
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "TransferDate";
            col.Settings.AllowAutoFilter = DefaultBoolean.False;
            col.ColumnType = MVCxGridViewColumnType.DateEdit;
            col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
        });
        
        settings.Columns.Add(col =>
        {
            col.FieldName = "ExperienceYears";           
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "Reason";
        });
       

        //settings.CellEditorInitialize = (sender, e) =>
        //{
        //    if ((sender as MVCxGridView).IsNewRowEditing)
        //    {
        //        if (e.Column.FieldName == "CompanyId" || e.Column.FieldName == "Gender")
        //        {
        //            (e.Editor as ASPxComboBox).SelectedIndex = 0;
        //        }
        //        if (e.Column.FieldName == "JoinedDate")
        //        {
        //            (e.Editor as ASPxDateEdit).Date = DateTime.Now;
        //        }
        //    }
        //};
        settings.Columns.Add(col =>
        {
            col.FieldName = "OldSalary";            
            col.ColumnType = MVCxGridViewColumnType.TextBox;
            TextBoxProperties textBoxPro = col.PropertiesEdit as TextBoxProperties;
            textBoxPro.DisplayFormatString = "c0";
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "AttachFile";
            col.ColumnType = MVCxGridViewColumnType.HyperLink;
            HyperLinkProperties hyperPros = col.PropertiesEdit as HyperLinkProperties;

            col.SetDataItemTemplateContent(item =>
            {
                Html.DevExpress().HyperLink(link =>
                {
                    if (item.Text == "&nbsp;")
                    {
                        link.Properties.Text = "N\\A";
                    }
                    else
                    {
                        link.Properties.Text = item.Text;
                        link.NavigateUrl = string.Format("~/Upload/Contracts/{0}", item.Text);
                    }

                }).Render();
            });  
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()