@model HNGHRMS.Web.ViewModels.EmployeeTransferFormModel


@Html.DevExpress().CallbackPanel(settings =>
{
    settings.Name = "cbpEmployeeTransferInformation";
    settings.CallbackRouteValues = new { Controller = "Employee", Action = "EmployeeTransferById" };
    settings.ClientSideEvents.BeginCallback = "OnBeginCbpEmployeeTransferCallback";
    settings.SetContent(() =>
    {
        Html.DevExpress().FormLayout(formSetting =>
        {
            formSetting.Name = "EmployeeTransferInforForm";            
            formSetting.Items.AddGroupItem(groupItemSettings =>
            {
                groupItemSettings.Caption = "Thông tin nhân viên";
                groupItemSettings.ColCount = 3;
                groupItemSettings.Items.Add(m => m.EmployeeId, item =>
                {
                    item.Caption = "Mã Hệ thống";
                    item.ColSpan = 3;
                    item.NestedExtension().TextBox(s => { s.ReadOnly = true; });
                });
                groupItemSettings.Items.Add(m => m.EmployeeCode, item =>
                {
                    item.Caption = "Mã Nhân viên";
                    item.NestedExtension().TextBox(s => { s.ReadOnly = true; });
                });
                groupItemSettings.Items.Add(m => m.Name, item =>
                {
                    item.Caption = "Họ tên";
                    item.NestedExtension().TextBox(s => { s.ReadOnly = true; });
                });
                groupItemSettings.Items.Add(m => m.GenderName, item =>
                {
                    item.Caption = "Giới tính";
                    item.NestedExtension().TextBox(s => { s.ReadOnly = true; });
                });
                groupItemSettings.Items.Add(m => m.Address, item =>
                {
                    item.Caption = "Địa chỉ";
                    item.ColSpan = 2;
                    item.NestedExtension().Memo(s => { s.ReadOnly = true; s.Width = Unit.Percentage(100); });
                });
                groupItemSettings.Items.AddEmptyItem();
                groupItemSettings.Items.Add(m => m.CompanyName, item =>
                {
                    item.Caption = "Công ty";
                    item.ColSpan = 2;
                    item.NestedExtension().TextBox(s => { s.ReadOnly = true; s.Width = Unit.Percentage(100); });
                });
                groupItemSettings.Items.AddEmptyItem();
                groupItemSettings.Items.Add(m => m.PositionName, item =>
                {
                    item.Caption = "Chức vụ";
                    item.NestedExtension().TextBox(s => { s.ReadOnly = true; });
                });
                groupItemSettings.Items.Add(m => m.Departement, item =>
                {
                    item.Caption = "Phòng Ban";
                    item.NestedExtension().TextBox(s => { s.ReadOnly = true; });
                });
               
                groupItemSettings.Items.Add(item =>
                {
                    item.Caption = "Ngày vào làm";
                    item.SetNestedContent(() =>
                    {
                        Html.DevExpress().DateEditFor(m => m.JoinedDate, set =>
                        {
                            set.Name = "joinedDate";                                                        
                            set.ReadOnly = true;
                        }).GetHtml();
                    });
                });
                groupItemSettings.Items.Add(m => m.Salary, item =>
                {                                        
                    item.Caption = "Mức lương";
             
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                    TextBoxSettings txtSettings = (TextBoxSettings)item.NestedExtensionSettings;
                    txtSettings.ReadOnly = true;
                    txtSettings.Properties.DisplayFormatString = "c0";
                });
                groupItemSettings.Items.Add(m => m.OldMandatoryInsurance, item =>
                {
                    item.ColSpan = 2;
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                    TextBoxSettings txtSettings = (TextBoxSettings)item.NestedExtensionSettings;
                    txtSettings.ReadOnly = true;
                   txtSettings.Properties.DisplayFormatString = "c0";
                });
                groupItemSettings.Items.Add(item =>
                {
                    item.ColSpan = 3;
                    //item.ShowCaption = DefaultBoolean.False;
                    item.Caption = "Thông tin điều chuyển";
                    item.CaptionSettings.Location = LayoutItemCaptionLocation.Bottom;
                    item.SetNestedContent(() => {
                        ViewContext.Writer.Write("<hr>");
                    });
                });
                groupItemSettings.Items.Add(m=> m.NewCompanyId,item =>
                {
                    
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
                    ComboBoxSettings cmbSetting = (ComboBoxSettings)item.NestedExtensionSettings;
                    cmbSetting.Properties.ValueField = "Id";
                    cmbSetting.Properties.TextField = "CompanyName";
                    cmbSetting.Properties.ValueType = typeof(int);
                    cmbSetting.Properties.DataSource = Model.NewCompanyList;
                    cmbSetting.Width = Unit.Percentage(100);
                });                   
                groupItemSettings.Items.Add(m => m.NewPositionId, item =>
                {
                    //item.Name = "TransferEmployeeCompanyList";
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
                    ComboBoxSettings cmbSetting = (ComboBoxSettings)item.NestedExtensionSettings;
                    cmbSetting.Properties.ValueField = "Id";
                    cmbSetting.Properties.TextField = "PositionName";
                    cmbSetting.Properties.ValueType = typeof(int);
                    cmbSetting.Properties.DataSource = Model.NewPositionList;

                });
                groupItemSettings.Items.Add(m => m.NewDepartement, item =>
                {
                    item.NestedExtension().TextBox(txt => { txt.ShowModelErrors = true; });
                });
                groupItemSettings.Items.Add(m => m.TransferDate, item =>
                {
                    item.NestedExtension().DateEdit(date => { date.ShowModelErrors = true; date.Properties.ClientSideEvents.Validation = "OnTransferDateValidation"; });
                });
                groupItemSettings.Items.Add(m => m.NewSalary, item =>
                {
                    item.ColSpan = 2;
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                    TextBoxSettings txtSetting = (TextBoxSettings)item.NestedExtensionSettings;
                    txtSetting.Properties.DisplayFormatString = "c0";
                    txtSetting.ShowModelErrors = true;
                });
                groupItemSettings.Items.Add(m => m.IsInsuranceTransfer,item =>
                {                                   
                    item.NestedExtension().CheckBox(chb => {
                        chb.Properties.ClientSideEvents.CheckedChanged = "OnIsInsuranceTransferChanged";
                    });                    
                });
                groupItemSettings.Items.Add(m => m.InsuranceAmount, item =>
                {                    
                //    item.HelpText = "Gía trị 0 để lấy chức vụ làm định mức bảo hiểm";
                    item.HelpTextSettings.Position = HelpTextPosition.Right;                                        
                    item.NestedExtension().TextBox(txt => {
                        txt.Properties.ClientInstanceName = "InsuranceTransferAmmountTxt";                        
                        txt.ClientEnabled = false;
                        txt.Properties.DisplayFormatString = "c0";
                        txt.ShowModelErrors = true;
                    });
                });
                groupItemSettings.Items.Add(m => m.InsuranceApplyDate, item =>
                {                                        
                    item.NestedExtension().DateEdit(txt =>
                    {
                        txt.Properties.ClientInstanceName = "InsuranceTransferDate";
                        txt.ClientEnabled = false;
                        txt.Properties.DisplayFormatString = "dd/MM/yyyy";
                        txt.ShowModelErrors = true;
                    });
                });
                groupItemSettings.Items.Add(m => m.Reason, item =>
                {
                    item.NestedExtension().Memo(s => { s.ReadOnly = false; s.Width = Unit.Percentage(50); s.ShowModelErrors = true; });
                    item.ColSpan = 3;                  
                });
                groupItemSettings.Items.Add(item =>
                {
                    item.ColSpan = 3;
                    item.Name = "EmployeeTransferAddUploadFile";
                    item.Caption = "File đính kèm";
                    item.CaptionSettings.Location = LayoutItemCaptionLocation.Top;
                    
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.UploadControl;
                    UploadControlSettings uploadSettings = (UploadControlSettings)item.NestedExtensionSettings;
                    uploadSettings.ShowUploadButton = true;
                    
                    uploadSettings.CallbackRouteValues = new { Controller = "Employee", Action = "EmployeeTransferAddAttachFileUploadControlCallbackAction", };
                    uploadSettings.ClientSideEvents.FileUploadComplete = "OnEmployeeTransferAddUploadFileComplete";
                });
                groupItemSettings.Items.Add(m => m.FileAttach, item =>
                {
                    item.ColSpan = 3;
                    item.ShowCaption = DefaultBoolean.False;
                    item.ClientVisible = false;
                });
                groupItemSettings.Items.Add(m => m.FileAttach, item =>
                {
                    item.ColSpan = 3;                              
                    item.ShowCaption = DefaultBoolean.False;
                    item.Caption = "File tải";
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.HyperLink;
                    HyperLinkSettings hyperlinkSettings = (HyperLinkSettings)item.NestedExtensionSettings;
                    hyperlinkSettings.Name = "ExperienceAddAttachFileClient";
                    hyperlinkSettings.ClientVisible = true;
                    hyperlinkSettings.Properties.ClientInstanceName = "ExperienceAddAttachFileClient";
                });
                groupItemSettings.Items.Add(item =>
                {
                    item.ShowCaption = DefaultBoolean.False;
                    item.HorizontalAlign = FormLayoutHorizontalAlign.Left;
                    item.Width = 150;
                    item.NestedExtension().Button(s =>
                    {
                        s.Text = "Điều chuyển";
                        s.Enabled = Model.EmployeeId == 0 ? false : true;
                        s.Name = "btnTerminate";
                        s.UseSubmitBehavior = true;
                    });
                });
            });
        }).GetHtml(); 
               
    });
}).GetHtml()


